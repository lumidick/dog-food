{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { isError } from '../../utils/store';\nexport const fetchSingleProduct = createAsyncThunk('singleProduct/fetchSingleProduct', async function (productId, _ref) {\n  let {\n    rejectWithValue,\n    fulfillWithValue,\n    extra: api\n  } = _ref;\n  try {\n    const data = await api.getProductById(productId);\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const fetchCreateReview = createAsyncThunk('singleProduct/fetchCreateReview', async function (_ref2, _ref3) {\n  let {\n    productId,\n    data: body\n  } = _ref2;\n  let {\n    rejectWithValue,\n    fulfillWithValue,\n    extra: api\n  } = _ref3;\n  try {\n    const data = await api.createReviewProduct(productId, body);\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nconst initialState = {\n  data: {},\n  loading: true,\n  error: null\n};\nconst singleProductSlice = createSlice({\n  name: 'singleProduct',\n  initialState,\n  reducers: {\n    setProductState: (state, action) => {\n      state.data = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSingleProduct.pending, (state, action) => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchSingleProduct.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n    }).addCase(fetchCreateReview.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n    }).addMatcher(isError, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setProductState\n} = singleProductSlice.actions;\nexport default singleProductSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","isError","fetchSingleProduct","productId","rejectWithValue","fulfillWithValue","extra","api","data","getProductById","error","fetchCreateReview","body","createReviewProduct","initialState","loading","singleProductSlice","name","reducers","setProductState","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","addMatcher","actions","reducer"],"sources":["/home/titus/Рабочий стол/dog-food/src/storage/singleProduct/singleProductSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { isError } from '../../utils/store';\n\nexport const fetchSingleProduct = createAsyncThunk(\n  'singleProduct/fetchSingleProduct',\n  async function (productId,{ rejectWithValue, fulfillWithValue, extra: api }) {\n    try {\n      const data = await api.getProductById(productId);\n\n      return fulfillWithValue(data);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n\nexport const fetchCreateReview = createAsyncThunk(\n  'singleProduct/fetchCreateReview',\n  async function ({productId, data: body},{ rejectWithValue, fulfillWithValue, extra: api }) {\n    try {\n      const data = await api.createReviewProduct(productId, body);\n      return fulfillWithValue(data);\n\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n\nconst initialState = {\n  data: {},\n  loading: true,\n  error: null,\n};\n\nconst singleProductSlice = createSlice({\n  name: 'singleProduct',\n  initialState,\n  reducers: {\n    setProductState: (state, action) => {\n      state.data = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSingleProduct.pending, (state, action) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchSingleProduct.fulfilled, (state, action) => {\n        state.data = action.payload;\n        state.loading = false;\n      })\n      .addCase(fetchCreateReview.fulfilled, (state, action) => {\n        state.data = action.payload;\n        state.loading = false;\n      })\n      .addMatcher(isError, (state, action) => {\n        state.error = action.payload;\n        state.loading = false;\n      })\n  },\n});\n\nexport const { setProductState } = singleProductSlice.actions; \nexport default singleProductSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAChD,kCAAkC,EAClC,gBAAgBG,SAAS,QAAoD;EAAA,IAAnD;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC,KAAK,EAAEC;EAAI,CAAC;EACzE,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,cAAc,CAACN,SAAS,CAAC;IAEhD,OAAOE,gBAAgB,CAACG,IAAI,CAAC;EAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAON,eAAe,CAACM,KAAK,CAAC;EAC/B;AACF,CAAC,CACF;AAGD,OAAO,MAAMC,iBAAiB,GAAGX,gBAAgB,CAC/C,iCAAiC,EACjC,8BAA2F;EAAA,IAA3E;IAACG,SAAS;IAAEK,IAAI,EAAEI;EAAI,CAAC;EAAA,IAAC;IAAER,eAAe;IAAEC,gBAAgB;IAAEC,KAAK,EAAEC;EAAI,CAAC;EACvF,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMD,GAAG,CAACM,mBAAmB,CAACV,SAAS,EAAES,IAAI,CAAC;IAC3D,OAAOP,gBAAgB,CAACG,IAAI,CAAC;EAE/B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAON,eAAe,CAACM,KAAK,CAAC;EAC/B;AACF,CAAC,CACF;AAGD,MAAMI,YAAY,GAAG;EACnBN,IAAI,EAAE,CAAC,CAAC;EACRO,OAAO,EAAE,IAAI;EACbL,KAAK,EAAE;AACT,CAAC;AAED,MAAMM,kBAAkB,GAAGjB,WAAW,CAAC;EACrCkB,IAAI,EAAE,eAAe;EACrBH,YAAY;EACZI,QAAQ,EAAE;IACRC,eAAe,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACZ,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC7B;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,kBAAkB,CAACwB,OAAO,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACV,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDe,OAAO,CAACvB,kBAAkB,CAACyB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACZ,IAAI,GAAGa,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACL,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDU,OAAO,CAACd,iBAAiB,CAACgB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACZ,IAAI,GAAGa,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACL,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDa,UAAU,CAAC3B,OAAO,EAAE,CAACmB,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACL,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAgB,CAAC,GAAGH,kBAAkB,CAACa,OAAO;AAC7D,eAAeb,kBAAkB,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}