{"ast":null,"code":"const onResponce = res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\nclass Api {\n  constructor(_ref) {\n    let {\n      url,\n      token\n    } = _ref;\n    this.url = url;\n    this.token = `Bearer ${token}`;\n  }\n  getAllProducts() {\n    return fetch(`${this.url}/products`, {\n      headers: {\n        Authorization: this.token\n      }\n    }).then(onResponce);\n  }\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: {\n        Authorization: this.token\n      }\n    }).then(onResponce);\n  }\n  getAuthorReviewInfo(id) {\n    return fetch(`${this.url}/users/${id}`, {\n      headers: {\n        Authorization: this.token\n      }\n    }).then(onResponce);\n  }\n  getProductInfo(id) {\n    return fetch(`${this.url}/products/${id}`, {\n      headers: {\n        Authorization: this.token\n      }\n    }).then(onResponce);\n  }\n  updateUserInfo(updateUser) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: this.token\n      },\n      body: JSON.stringify(updateUser)\n    }).then(onResponce);\n  }\n  search(serachQuery) {\n    return fetch(`${this.url}/products/search?query=${serachQuery}`, {\n      headers: {\n        Authorization: this.token\n      }\n    }).then(onResponce);\n  }\n  changeLikeStatus(productId, isLike) {\n    return fetch(`${this.url}/products/likes/${productId}`, {\n      method: isLike ? 'DELETE' : 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: this.token\n      }\n    }).then(onResponce);\n  }\n}\nconst config = {\n  url: 'https://api.react-learning.ru',\n  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjJmOTk5MmFlNWM0MGMxMGMxMWRmZTQiLCJpYXQiOjE2NDcyODY2ODEsImV4cCI6MTY3ODgyMjY4MX0.WHKXAErKZtY445yXecOFZsx981MuXicJti-okSY-tac'\n};\nconst api = new Api(config);\nexport default api;","map":{"version":3,"names":["onResponce","res","ok","json","Promise","reject","status","Api","constructor","url","token","getAllProducts","fetch","headers","Authorization","then","getUserInfo","getAuthorReviewInfo","id","getProductInfo","updateUserInfo","updateUser","method","body","JSON","stringify","search","serachQuery","changeLikeStatus","productId","isLike","config","api"],"sources":["/home/titus/Рабочий стол/dog-food/src/utils/api.js"],"sourcesContent":["const onResponce = (res) => (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n\nclass Api {\n  constructor({ url, token }) {\n    this.url = url;\n    this.token = `Bearer ${token}`;\n  }\n\n  getAllProducts() {\n    return fetch(`${this.url}/products`, {\n      headers: {\n        Authorization: this.token,\n      },\n    }).then(onResponce);\n  }\n\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: {\n        Authorization: this.token,\n      },\n    }).then(onResponce);\n  }\n\n  getAuthorReviewInfo(id) {\n    return fetch(`${this.url}/users/${id}`, {\n      headers: {\n        Authorization: this.token,\n      },\n    }).then(onResponce);\n  }\n\n  getProductInfo(id) {\n    return fetch(`${this.url}/products/${id}`, {\n      headers: {\n        Authorization: this.token,\n      },\n    }).then(onResponce);\n  }\n\n  updateUserInfo(updateUser) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: this.token,\n      },\n      body: JSON.stringify(updateUser),\n    }).then(onResponce);\n  }\n\n  search(serachQuery) {\n    return fetch(`${this.url}/products/search?query=${serachQuery}`, {\n      headers: {\n        Authorization: this.token,\n      },\n    }).then(onResponce);\n  }\n\n  changeLikeStatus(productId, isLike) {\n    return fetch(`${this.url}/products/likes/${productId}`, {\n      method: isLike ? 'DELETE' : 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: this.token,\n      },\n    }).then(onResponce);\n  }\n}\n\nconst config = {\n  url: 'https://api.react-learning.ru',\n  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjJmOTk5MmFlNWM0MGMxMGMxMWRmZTQiLCJpYXQiOjE2NDcyODY2ODEsImV4cCI6MTY3ODgyMjY4MX0.WHKXAErKZtY445yXecOFZsx981MuXicJti-okSY-tac',\n};\n\nconst api = new Api(config);\n\nexport default api;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,GAAG,IAAMA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAE;AAE1F,MAAMC,GAAG,CAAC;EACRC,WAAW,OAAiB;IAAA,IAAhB;MAAEC,GAAG;MAAEC;IAAM,CAAC;IACxB,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,KAAK,GAAI,UAASA,KAAM,EAAC;EAChC;EAEAC,cAAc,GAAG;IACf,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,WAAU,EAAE;MACnCI,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACJ;MACtB;IACF,CAAC,CAAC,CAACK,IAAI,CAACf,UAAU,CAAC;EACrB;EAEAgB,WAAW,GAAG;IACZ,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,WAAU,EAAE;MACnCI,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACJ;MACtB;IACF,CAAC,CAAC,CAACK,IAAI,CAACf,UAAU,CAAC;EACrB;EAEAiB,mBAAmB,CAACC,EAAE,EAAE;IACtB,OAAON,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,UAASS,EAAG,EAAC,EAAE;MACtCL,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACJ;MACtB;IACF,CAAC,CAAC,CAACK,IAAI,CAACf,UAAU,CAAC;EACrB;EAEAmB,cAAc,CAACD,EAAE,EAAE;IACjB,OAAON,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,aAAYS,EAAG,EAAC,EAAE;MACzCL,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACJ;MACtB;IACF,CAAC,CAAC,CAACK,IAAI,CAACf,UAAU,CAAC;EACrB;EAEAoB,cAAc,CAACC,UAAU,EAAE;IACzB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,WAAU,EAAE;MACnCa,MAAM,EAAE,OAAO;MACfT,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,IAAI,CAACJ;MACtB,CAAC;MACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;IACjC,CAAC,CAAC,CAACN,IAAI,CAACf,UAAU,CAAC;EACrB;EAEA0B,MAAM,CAACC,WAAW,EAAE;IAClB,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,0BAAyBkB,WAAY,EAAC,EAAE;MAC/Dd,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACJ;MACtB;IACF,CAAC,CAAC,CAACK,IAAI,CAACf,UAAU,CAAC;EACrB;EAEA4B,gBAAgB,CAACC,SAAS,EAAEC,MAAM,EAAE;IAClC,OAAOlB,KAAK,CAAE,GAAE,IAAI,CAACH,GAAI,mBAAkBoB,SAAU,EAAC,EAAE;MACtDP,MAAM,EAAEQ,MAAM,GAAG,QAAQ,GAAG,KAAK;MACjCjB,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,IAAI,CAACJ;MACtB;IACF,CAAC,CAAC,CAACK,IAAI,CAACf,UAAU,CAAC;EACrB;AACF;AAEA,MAAM+B,MAAM,GAAG;EACbtB,GAAG,EAAE,+BAA+B;EACpCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMsB,GAAG,GAAG,IAAIzB,GAAG,CAACwB,MAAM,CAAC;AAE3B,eAAeC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}