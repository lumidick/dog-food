{"ast":null,"code":"var _jsxFileName = \"/home/titus/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/dog-food/src/Table.jsx\";\nimport { Table as TableAnt, Image, Typography } from 'antd';\nimport { pokemonData } from './pokemon.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = Typography;\nconst Table = _ref => {\n  let {\n    rows,\n    data\n  } = _ref;\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: true,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: 'Image',\n    dataIndex: 'image',\n    key: 'image',\n    render: src => /*#__PURE__*/_jsxDEV(Image, {\n      src: src,\n      width: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 24\n    }, this)\n  }, {\n    title: 'Classification',\n    dataIndex: 'classification',\n    key: 'classification',\n    filters: [{\n      text: 'Seed Pokémon',\n      value: 'Seed Pokémon'\n    }, {\n      text: 'Lizard Pokémon',\n      value: 'Lizard Pokémon'\n    }, {\n      text: 'Flame Pokémon',\n      value: 'Flame Pokémon'\n    }],\n    onFilter: (value, record) => record.classification.includes(value)\n  }, {\n    title: 'Max HP',\n    dataIndex: 'maxHP',\n    key: 'maxHP',\n    sorter: (a, b) => a.maxHP - b.maxHP\n  }, {\n    title: 'Max CP',\n    dataIndex: 'maxCP',\n    key: 'maxCP'\n  }];\n  const pokemons = data.map(el => {\n    return {\n      ...el,\n      key: el.id\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(TableAnt, {\n    columns: columns,\n    dataSource: pokemons,\n    pagination: {\n      pageSizeOptions: [20, 30, 40],\n      showSizeChanger: false,\n      pageSize: rows\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Table","TableAnt","Image","Typography","pokemonData","Paragraph","rows","data","columns","title","dataIndex","key","render","text","src","filters","value","onFilter","record","classification","includes","sorter","a","b","maxHP","pokemons","map","el","id","pageSizeOptions","showSizeChanger","pageSize"],"sources":["/home/titus/Рабочий стол/dog-food/src/Table.jsx"],"sourcesContent":["import { Table as TableAnt, Image, Typography } from 'antd';\nimport { pokemonData } from './pokemon.js';\n\nconst { Paragraph } = Typography;\n\nconst Table = ({ rows, data }) => {\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text) => <Paragraph copyable>{text}</Paragraph>,\n    },\n    {\n      title: 'Image',\n      dataIndex: 'image',\n      key: 'image',\n      render: (src) => <Image src={src} width={150}></Image>,\n    },\n    {\n      title: 'Classification',\n      dataIndex: 'classification',\n      key: 'classification',\n      filters: [\n        {\n          text: 'Seed Pokémon',\n          value: 'Seed Pokémon',\n        },\n        {\n          text: 'Lizard Pokémon',\n          value: 'Lizard Pokémon',\n        },\n        {\n          text: 'Flame Pokémon',\n          value: 'Flame Pokémon',\n        },\n      ],\n      onFilter: (value, record) => record.classification.includes(value),\n    },\n    {\n      title: 'Max HP',\n      dataIndex: 'maxHP',\n      key: 'maxHP',\n      sorter: (a, b) => a.maxHP - b.maxHP,\n    },\n    {\n      title: 'Max CP',\n      dataIndex: 'maxCP',\n      key: 'maxCP',\n    },\n  ];\n  const pokemons = data.map((el) => {\n    return { ...el, key: el.id };\n  });\n  return (\n    <TableAnt\n      columns={columns}\n      dataSource={pokemons}\n      pagination={{\n        pageSizeOptions: [20, 30, 40],\n        showSizeChanger: false,\n        pageSize: rows,\n      }}\n    ></TableAnt>\n  );\n};\n\nexport default Table;\n"],"mappings":";AAAA,SAASA,KAAK,IAAIC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,QAAQ,MAAM;AAC3D,SAASC,WAAW,QAAQ,cAAc;AAAC;AAE3C,MAAM;EAAEC;AAAU,CAAC,GAAGF,UAAU;AAEhC,MAAMH,KAAK,GAAG,QAAoB;EAAA,IAAnB;IAAEM,IAAI;IAAEC;EAAK,CAAC;EAC3B,MAAMC,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE,MAAM;IACXC,MAAM,EAAGC,IAAI,iBAAK,QAAC,SAAS;MAAC,QAAQ;MAAA,UAAEA;IAAI;MAAA;MAAA;MAAA;IAAA;EAC7C,CAAC,EACD;IACEJ,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE,OAAO;IACZC,MAAM,EAAGE,GAAG,iBAAK,QAAC,KAAK;MAAC,GAAG,EAAEA,GAAI;MAAC,KAAK,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EAC/C,CAAC,EACD;IACEL,KAAK,EAAE,gBAAgB;IACvBC,SAAS,EAAE,gBAAgB;IAC3BC,GAAG,EAAE,gBAAgB;IACrBI,OAAO,EAAE,CACP;MACEF,IAAI,EAAE,cAAc;MACpBG,KAAK,EAAE;IACT,CAAC,EACD;MACEH,IAAI,EAAE,gBAAgB;MACtBG,KAAK,EAAE;IACT,CAAC,EACD;MACEH,IAAI,EAAE,eAAe;MACrBG,KAAK,EAAE;IACT,CAAC,CACF;IACDC,QAAQ,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAKA,MAAM,CAACC,cAAc,CAACC,QAAQ,CAACJ,KAAK;EACnE,CAAC,EACD;IACEP,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE,OAAO;IACZU,MAAM,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC;EAChC,CAAC,EACD;IACEf,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE;EACP,CAAC,CACF;EACD,MAAMc,QAAQ,GAAGlB,IAAI,CAACmB,GAAG,CAAEC,EAAE,IAAK;IAChC,OAAO;MAAE,GAAGA,EAAE;MAAEhB,GAAG,EAAEgB,EAAE,CAACC;IAAG,CAAC;EAC9B,CAAC,CAAC;EACF,oBACE,QAAC,QAAQ;IACP,OAAO,EAAEpB,OAAQ;IACjB,UAAU,EAAEiB,QAAS;IACrB,UAAU,EAAE;MACVI,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC7BC,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAEzB;IACZ;EAAE;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB,CAAC;AAAC,KA5DIN,KAAK;AA8DX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}